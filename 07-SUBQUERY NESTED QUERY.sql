------------------------DATA DICTIONARIES----------------------------------

SELECT * FROM DICT;

DESC USER_CONS_COLUMNS;

SELECT COLUMN_NAME, CONSTRAINT_NAME FROM USER_CONS_COLUMNS WHERE TABLE_NAME ='EMP1';

---------------------------SUBQUERY/NESTED QUERY---------------------------

    --A QUERY INSIDE ANOTHER QUERY IS CALLED AS SUBQUERY/NESTED QUERY.
    --SYNTAX: SELECT * FROM <TN> WHERE <CONDITION>(SELECT * FROM ......));
    
    --AS PER THE EXECUTION PROCESS OF SUBQUERY IT AGAIN CLASSIFIED INTO TWO WAYS.
        --1)NON CO-RELATED SUBQUERY
        --2)CO-RELATED SUBQUERY
        
     --NCRSQ
        --IN THIS FIRST INNER QUERY IS EXECUTED AND RETURN A VALUE BASED ON INNER QUERY RETURN VALUE LATER OUTER QUERY WILL BE EXECUTED AND PRODUCING A FINAL RESULT.
     --CRSQ
        --IN THIS FIRST OUTER QUERY IS EXECUTED AND RETURN A VALUE BASED ON OUTER QUERY RETURN VALUE LATER INNER QUERY WILL BE EXECUTED AND PRODUCING A FINAL RESULT.
      
      
      --NON CO-RELATED SUBQUERY---------------------
        --IN THIS FIRST INNER QUERY IS EXECUTED AND RETURN A VALUE BASED ON INNER QUERY RETURN VALUE LATER OUTER QUERY WILL BE EXECUTED AND PRODUCING A FINAL RESULT.
        
        --SINGLE ROW SUBQUERY
        --MULTIPLE ROW SUBQUERY
        --MULTIPLE COLUMN SUBQUERY
        --INLINE VIEW SUBQUERY
        
        
        ----------SINGLE ROW SUBQUERY---------------
        --WHEN A SUBQUERY RETURN A SINGLE VALUE IS CALLED SINGLE ROW SUBQUERY.
        --IN THIS SINGLE ROW SUBQUERY WE CAN USE THE FOLLOWINGG OPERATORS ARE =,<,>,<=,>=,!=
        
        --step1:inner query:
SELECT MAX(SAL) FROM EMP;------5000

        --step2:outer query:
        
--SELECT * FROM EMP WHERE <COLUMN N> =(CONDITION);        
SELECT * FROM EMP WHERE SAL =(SELECT MAX(SAL) FROM EMP);

        --step3:subquery=(outer+inner):

select * from emp where sal=(select max(sal) from emp);

--------------------
SELECT * FROM EMP;

SELECT JOB FROM EMP WHERE ENAME='SMITH';

SELECT * FROM EMP WHERE JOB=(SELECT JOB FROM EMP WHERE ENAME='SMITH');

-------------------
SELECT * FROM EMP WHERE SAL >(SELECT MAX(SAL) FROM EMP WHERE JOB='SALESMAN');

--------------------
 SELECT * FROM EMP WHERE HIREDATE=(SELECT MIN(HIREDATE) FROM EMP);
 
-----------------------

SELECT SAL FROM EMP WHERE ENAME='BLAKE';

SELECT * FROM EMP WHERE JOB= 'MANAGER' AND SAL>2850;

SELECT * FROM EMP WHERE JOB= (SELECT JOB FROM EMP WHERE ENAME='BLAKE') AND SAL>(SELECT SAL FROM EMP WHERE ENAME='BLAKE');

------------------------

SELECT * FROM EMP;

SELECT MAX(SAL) FROM EMP;

SELECT MAX(SAL) FROM EMP WHERE SAL<(SELECT MAX(SAL) FROM EMP);

SELECT * FROM EMP WHERE SAL=(SELECT MAX(SAL) FROM EMP WHERE SAL<(SELECT MAX(SAL) FROM EMP)) ;           ---SECOND HOGHEST SALARY

SELECT * FROM EMP WHERE SAL=(SELECT MAX(SAL) FROM EMP WHERE SAL<(SELECT MAX(SAL) FROM EMP WHERE SAL<(SELECT MAX(SAL) FROM EMP)));  ---THIRD HIGHEST SALARY

----------------------------------MULTIPLE ROW SUBQUERY---------------------------

    --WHEN A SUBQUERY RETURNS MORE THAN ONE VALUE IS CALLED AS MULTIPLE ROW SUBQUERY.
    --IN THIS MULTIPLE ROW SUBQUERY WE CAN USE THE FOLLOWING OPERATORS ARE 'IN,ANY,ALL'
--MAXIMUM SALARY FROM EACH JOB   
SELECT JOB,MAX(SAL) FROM EMP GROUP BY JOB;

SELECT * FROM EMP WHERE SAL IN(SELECT MAX(SAL) FROM EMP GROUP BY JOB);

-----------------------WORKING WITH ANY,ALL--------------------------------
-------------ANY----------

    --IS USED TO COMPARING ANY OF THE VALUES IN THE GIVEN LIST IS TRUEVTHEN IT RETURN A VALUE.
    
---------------ALL----------

    --IS USED TO COMPARE ALL VALUES IN THE GIVEN LIST IS TRUE THEN ONLY RETURN A VALUE.

SELECT SAL FROM EMP WHERE JOB='SALESMAN';

SELECT * FROM EMP WHERE SAL> ANY(SELECT SAL FROM EMP WHERE JOB='SALESMAN');

SELECT * FROM EMP WHERE SAL> ALL(SELECT SAL FROM EMP WHERE JOB='SALESMAN');



---------------------------MULTIPLE COLUMN SUBQUERY------------------

--MULTIPLE COLUMNS VALUES OF INNER QUERY COMPAING WITH MULTIPLE QUERY IS CALLED MCSQ.

SELECT JOB, MGR FROM EMP WHERE ENAME='SCOTT';

SELECT * FROM EMP WHERE (JOB,MGR) IN (SELECT JOB, MGR FROM EMP WHERE ENAME='SCOTT');


------------------------------INLINE SUBQUERY------------------------

    --IS SPECIAL TYPE OF SUBQUERY.
    --PROVIDDING A SELECT QUERY IN PLACE OF TABLE NAME IN SELECT STATEMENT.
    
    --SYNTAX: 
    
SELECT ENAME,SAL,SAL*12 ANNUAL_SALARY FROM EMP;

SELECT ENAME,SAL,SAL*12 ANNUAL_SALARY FROM EMP WHERE ANNUAL_SALARY > 25000;             --"%s: invalid identifier"

SELECT * FROM (SELECT ENAME,SAL,SAL*12 ANNUAL_SALARY FROM EMP )WHERE ANNUAL_SALARY > 25000; 







----------------------DRL(DATA RETRIEVAL LANGUAGE)--------------------
    --TO RETRIEVE ALL DATA FROM A TABLE AT A TIME
    --OR SPECIFIC ROW USING 'WHERE CLAUSE'

SELECT * FROM EMP;

SELECT * FROM EMP WHERE JOB='MANAGER';

-------------------TCL(TRANSATIONAL CONTROL LANGUAGE)-------------------
--COMMIT
--ROLLBACK 
--SAVEPOINT

--------------------COMMIT---------------------------

    --THIS COMMAND IS USED TO MAKE A TRANSACTION.
    --THERE ARE TWO TYPES OF TRANSACTION.
    --1)IMPLICIT COMMIT
        --THESE TRASACTION ARE COMMITTED BY SYSTEM BY DEFAULT
            --EX.DDL COMMANDS
    --2)EXPLICIT COMMIT
        --THSES TRANSACTION ARE COMMITTED BY USER WHENEVER IT REQUIRED.
            --EX.DML COMMANDS
    --SYNTAX: COMMIT;        

---------------------ROLLBACK---------------------------

    --THIS COMMAND IS USED TO CANCEL A TRANSACTION.
    --BUT ONCE A TRANSACTION IS COMMITEED THEN WE CANNOT ROLLBACK.
    
    
    --SYNTAX: ROLLBACL;
    
---------------------SAVEPOINT---------------------------------

    --WHEN WE CREATE A SAVEPOINT THEN IN INTERNALLY SYSTEM IS ALLOCATING SOME MEMORY FOR A POINTER AND I THIS POINTER MEMORY(TEMP. MEMORY)  WE CAN SAVE A TRANSACTION INFORMATION WHICH WE WANT TO ROLLBACK.
    --SYNTAX: SAVEPOINT <POINTER NAME>;
    
    --HOW TO ROLLBACK SAVEPOINT
    --SYNTAX: ROLLBACK TO <POINTER NAME>
    
    
    
    
    
----------------ALIAS NAME----------------------
    --IT IS ALTERNATE NAME OR TEMPORARY NAME
    --ON COLUMN NAME AND TABLE NAME
    
    --1) COLUMN LEVEL ALIAS NAME
            --IN THIS THIS LEVEL WE ARE CREATING ALIAS FOR COLUMNS
            --SYNTAX: <COLUMN NAME> <COLUMN ALIAS NAME>   
    
    --2) TABLE LEVEL ALIAS NAME
            --IN THIS THIS LEVEL WE ARE CREATING ALIAS FOR TABLE
            --SYNTAX: <TABLE NAME> <TABLE ALIAS NAME>
            
SELECT * FROM EMP;    

SELECT ENAME NAME,JOB POSITION, SAL ANNUAL FROM EMP E ;  

--CONCATENATION(||)

SELECT 'MR. '||ENAME ||' '||'IS WORKING AS A '||JOB FROM EMP; 

---DISTINCT---
    --IT IS USED TO REMOVE DUPLICATES
    --SYNTAX: DISTINCT <TN>

SELECT JOB FROM EMP;

SELECT DISTINCT JOB FROM EMP;
    
-----ARITHMATIC OPERATOR-----------

SELECT SAL FROM EMP;

SELECT SAL+1000 INCREMENTSALARY FROM EMP;


SELECT * FROM EMP WHERE DEPTNO=20;

SELECT ENAME, JOB, SAL, SAL*12 ANNUAL_SALARY FROM EMP WHERE DEPTNO=20;

SELECT ENAME, JOB, SAL, SAL+SAL*10/100 TENPERCENTINCREMENT FROM EMP WHERE DEPTNO=20;

------RELATIONAL OPERATOR------
--AND
--OR
--NOT

-----AND----
SELECT * FROM EMP WHERE JOB='MANAGER';

SELECT * FROM EMP WHERE JOB='MANAGER' AND ENAME='CLARK';

SELECT * FROM EMP WHERE JOB='MANAGER' AND ENAME='SAI';

-----OR-------------

SELECT * FROM EMP WHERE DEPTNO=10;

SELECT * FROM EMP WHERE DEPTNO=10 OR ENAME='SAI';

----NOT-------------
SELECT * FROM EMP;

SELECT * FROM EMP WHERE NOT JOB='CLERK' AND NOT JOB='SALESMAN';

----------------------LIKE--------------------------
--COMPARING A SPECIFIC CHARACTER PATTEREN WISE
--USE 'WILDCARDS OPERATORS' AONG WITH LIKE OPERATOR
--1) % - REMAINING GROUP OF CHARACTER IN THE EXPRESSION

SELECT * FROM EMP WHERE ENAME LIKE 'S%';      --STARTS WITH 'S'

SELECT * FROM EMP WHERE ENAME LIKE '____';    --FOUR CHHARACTER

SELECT * FROM EMP WHERE ENAME LIKE '%N';      --ENDS WITH 'N'

SELECT * FROM EMP WHERE ENAME LIKE '%I%';     --HAVING 'I' CHARACTER

SELECT * FROM EMP WHERE ENAME LIKE '_O%';     --2ND CHARACTER IS 'O'


-----------------FUNCTIONS----------------------
--1)PREDFINE FUNCTIONS
        --* SINGLE ROW FUNCTION
        --* MULIPLE ROW FUNCTION
        
--* SINGLE ROW FUNCTION
--THESE FUNCTION RETURN SINGLE VALUE
    -->NUMERIC FUNCTION
    -->STRING FUNCTION
    -->DATE FUNCTION
    -->CONVERSON FUNCTION
    
    --SYNTAX: SELECT <FUNCTION NAME> (VALUES)FROM DUAL;
    
    --DUAL -PREDEFINED TABLE
    --HAVING ONLY ONE ROW AND SINGLE COLUMN.
    --TESTING FUNCTION FUCTIONALITIES.
    --IT ALSO CALLED AS 'DUMMY TABLE' IN ORACLE
    
---NUMERIC FUNCTIONS-----------
--1)ABS()
    --TO CONVERT -VE SIGN VALUE INTO +VE
SELECT * FROM DUAL;
    
SELECT ABS(-45) FROM DUAL; 

SELECT ENAME, SAL,COMM, ABS(COMM-SAL) FROM EMP;

--2)MOD()
    --RETURN REMAINDER VALUE
    
SELECT MOD(15,2) FROM DUAL;    

--3)POEWR()
    --THE POWER OFGIVEN EXPRESSION 
    
SELECT POWER(2,2) FROM DUAL;   

SELECT POWER(2,3) FROM DUAL;  

--4)ROUND()
    --RETURN NEAREST VALUE OF GIVEN EXPRESSION

SELECT ROUND(45.50) FROM DUAL;

SELECT ROUND(45.45) FROM DUAL; 

--5)TRUNC
    -- RETURN A VALUE WHICH WILL SPECIFIED NUMBER OF DECIMAL PLACES

SELECT TRUNC(45.50)FROM DUAL; 

SELECT TRUNC(45.75)FROM DUAL; 


--------------------STRING FUNCTION--------------------

--1)LENGTH()
    --RETURN LENGTH OF STRING

SELECT LENGTH('KIRAN') FROM DUAL;

SELECT ENAME, LENGTH(ENAME) LENGTH FROM EMP;

SELECT * FROM EMP WHERE LENGTH(ENAME)=6;


--2)LOWER()
    -- TO CONVERT UPPCASE INTO LOWER CASE

SELECT LOWER('HELLO') FROM DUAL;    

SELECT ENAME, LOWER(ENAME) LENGTH FROM EMP;

--3)UPPER()
    ---CONVERT IN UPPER CASE

--4)INITCAP()
    --TO CONVERT FIRT LETTER OR CHARACTER IS CAPITAL IN A GIVEN STRING

SELECT INITCAP('HELLO') FROM DUAL;    

SELECT ENAME, INITCAP(ENAME) LENGTH FROM EMP;    
    
--5)LTRIM()
    --REMOVE UNWANTED SPACE OR ELSE UNWANTED CHARACTER FROM LEFT SIDE OF STRING

SELECT LTRIM('     SAI') FROM DUAL;   

SELECT LTRIM('XXXXXXSAI','X') FROM DUAL; 

--6)RTRIM()
    --REMOVE UNWANTED SPACE OR ELSE UNWANTED CHARACTER FROM RIGHT SIDE OF STRING

SELECT RTRIM('SAI       ') FROM DUAL;   

SELECT RTRIM('SAIXXXXXX','X') FROM DUAL; 


--7)TRIM()
    --REMOVE UNWANTED SPACE OR ELSE UNWANTED CHARACTER FROM BOTH SIDE OF STRING

SELECT TRIM('        SAI       ') FROM DUAL;   

SELECT TRIM('X' FROM 'XXXXXXSAIXXXXXX') FROM DUAL; 


--8)CONCAT()
    --ADDING TWO STRING AND STRING EXPRESSION
    --SYNTAX: CONCAT(STRING1,STRING2)
    
SELECT CONCAT('KIRAN','RANVIRKKAR') FROM DUAL;    
    
--9)REPLACE()
    --REPLACE ONE STRING WITH ANOTHER WITH GIVEN EXPRESSION
    --SYNTAX: REPLACE(OLD CHACTER,NEW CHARACTER)

SELECT REPLACE('HELLO','ELL','ABC')FROM DUAL;    

SELECT REPLACE('HELLO','ELL','XY')FROM DUAL;   


----------------MULTIPLE ROW/GROUPING FUNCTION-------------------
    --THESE FUNCTIONS ARE RETURN A SINGLE OR MULTIPLE ROWS

--1)SUM()
    --RETURN TOTAL VALUE    

SELECT SAL FROM EMP;    

SELECT SUM(SAL) FROM EMP;  

SELECT SUM(SAL) FROM EMP WHERE JOB='ANALYST';  

--2)AVG()
    
SELECT AVG(SAL) FROM EMP;  

SELECT AVG(SAL) FROM EMP WHERE JOB='ANALYST';  

--3)MIN()

SELECT MIN(SAL) FROM EMP;       --MINIMUM SALARY

--4)MAX()

SELECT MAX(SAL) FROM EMP;       --MAXIMUM SALARY

--5)COUNT()
    --TO COUNT NO. OF ROWS IN A TABLE
    --OR COUNT NO. OF VALUES IN A COLUMN
    --1)COUNT(*)
        --COUNTING ALL VALUES INCLUDING DUPLICATES AND NULL.
    --2)COUNTING(<COLLUMN NAME>)
        --COUNTING ALL VALUES INCLUDING DUPLICTES BUT NOT NULL        
    --3)COUNT(DISTINCT<COLUMN NAME>)
        --COUNTING ONLY UNIQUE VALUES 
        
SELECT COUNT(SAL) FROM EMP;                 --14

SELECT COUNT(DISTINCT(SAL)) FROM EMP;       --12

--SELECT * FROM EMP WHERE ENAME LIKE 'M%' AND JOB ='CLERK' ; 

--SELECT * FROM EMP WHERE JOB='CLERK' AND ENAME LIKE 'M%'  ; 






